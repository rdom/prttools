#!/bin/bash

show_help(){
    help="  NAME
    ba_scan - script to run sim/reco for prtdirc

  SYNOPSIS
    ba_scan [OPTION]

  DESCRIPTION 
     -l 
        level of reco
        0 - run decoding
        1 - run calibration
        
        3 - run sim, lut, reco (default)
        4 - run sim only
        5 - run lut simulation only
        6 - run sim reco only
        7 - run data reco only
        8 - run data-pdf creation
        9 - run proc data
        10 - run proc sim
     -j
        number of threads 
     -s 
        study 
        0 - all 
        # - study id
     -n 
        silent run"
    echo "$help" 
}

OPTIND=1 
while getopts "h?l:j:s:n" opt; do
    case "$opt" in
	h|\?)
            show_help
            exit 0
            ;;
	j)  threads=$OPTARG
            ;;
	s)  study=$OPTARG
	    ;;
	l)  level=$OPTARG
            ;;
	n)  silent=1
            ;;
    esac
done
threads=${threads:-6}
level=${level:-0}
study=${study:-1}
silent=${silent:-0}

shift $((OPTIND-1))

printf "====== Run dirc data processing ======\n"

if [ ${level} == "0" ]; then
    cd $study
    for x in $(ls *.hld); do
	if [ ! -f "${x%.*}.hld.root" ]; then
	    hldtools -j10 -d $x
	fi
    done
    exit
fi

if [ ${level} == "1" ]; then
    cd $study
    for x in $(ls *.hld.root); do
	if [ ! -f  ${x%.*.*}"C0.root" ]; then
	    tcalibration -j10 -c ../calib/calibf_june.root -t ../calib/calibo_june.root -j10 $x
	fi
    done
    exit
fi

waitForMe (){
    while : 
    do
	activth=$(ps aux | grep "root.exe.*[p]rocData\|[p]rtdirc -[^m,^c]" | wc -l)
	printf "\r$statusline [$activth] ---- [$(($(date +%s) - start_time)) s] "
	sleep .1
	if [ "$activth" -lt "$1" ]; then 
	    break  
	fi
	sleep 1
    done
}

datadir="/d/proc/jul18/"

processOneSim (){
	OIFS="$IFS"
	IFS=$'\n'
	
	file=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,0)" 2>/dev/null))
	args=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,3)" 2>/dev/null))
	
	IFS="$OIFS"

	
	datapath="${datadir}${1}"
	mkdir -p $datapath
	
	statusline="run study $1"
	for ((fk=1;fk<${#file[@]};fk++)); do
	    if [ ${level} -eq "3" ]; then
		./prtdirc -o "${datapath}/${file[fk]}S.root" ${args[fk]} -x mix_pip -e 45000 -b 1  > "${datapath}/${file[fk]}S.log" && \
		    ./prtdirc -o "${datapath}/lut_${file[fk]}S.root" ${args[fk]} -s 1 -a 180 -phi 0 -x "opticalphoton" -p "3.18 eV"  -e 10000000  -b 1 >> "${datapath}/${file[fk]}L.log" && \
		     cd ~/dirc/prtdirc/macro > /dev/null && root -q -b loadlib.C lutmean_cs.C"(\"${datapath}/lut_${file[fk]}S.root\")" >> "${datapath}/${file[fk]}L.log" && cd - && \
		    ./prtdirc -s 2 -i "${datapath}/${file[fk]}S.root" -u "${datapath}/lut_${file[fk]}S.root" -o "${datapath}/reco_${file[fk]}S.root" -e 0 -tr 1   >> "${datapath}/${file[fk]}SR.log" &
	    fi
	    if [ ${level} -eq "4" ]; then		
		if [ $1 -eq "250" ] || [ $1 -eq "201" ] || [ $1 -eq "202" ]; then	
		    ./prtdirc -o "${datapath}/${file[fk]}S.root" ${args[fk]} -x proton -tr 0.0 -e 1000 -r 0 -b 1  > "${datapath}/${file[fk]}S.log" &
		else		
		    ./prtdirc -o "${datapath}/${file[fk]}S.root" ${args[fk]} -x mix_pip -tr 0.0 -e 4000 -r 2704161 -b 1  > "${datapath}/${file[fk]}S.log" &
		fi
	    fi
	    if [ ${level} -eq "5" ]; then
		./prtdirc -o "${datapath}/lut_${file[fk]}S.root" ${args[fk]} -s 1 -z 0 -a 180 -phi 0 -x "opticalphoton" -p "3.18 eV" -e 10000000  -b 1 > "${datapath}/${file[fk]}L.log" && \
		    cd ~/dirc/prtdirc/macro > /dev/null &&  root -q -b loadlib.C lutmean_cs.C"(\"${datapath}/lut_${file[fk]}S.root\")" >> "${datapath}/${file[fk]}L.log" && cd -  &
	    fi
	    if [ ${level} -eq "6" ]; then
	       	./prtdirc -s 2 -i "${datapath}/${file[fk]}S.root" -u "${datapath}/lut_${file[fk]}S_cs_avr.root" -o "${datapath}/reco_${file[fk]}S.root" -f 0 -e 2000 -tr 0.5 -v 1 > "${datapath}/${file[fk]}SR.log" &
	    fi
	    if [ ${level} -eq "7" ]; then
		./prtdirc -s 2 -i "${datapath}/${file[fk]}C.root" -u "${datapath}/lut_${file[fk]}S_cs_avr.root" -o "${datapath}/reco_${file[fk]}C.root" ${args[fk]} -f 0 -e 2000 -tr 0.5 -v 1   > "${datapath}/${file[fk]}RR.log" &
	    fi
	    if [ ${level} -eq "8" ]; then
		./prtdirc -s 4 -i "${datapath}/${file[fk]}C.root" -u "${datapath}/lut_${file[fk]}S_cs_avr.root" -o "${datapath}/reco_${file[fk]}C.root" ${args[fk]} -f 0 -e 2000 -tr 0.5 -v 1   > "${datapath}/${file[fk]}RR.log" &
		./prtdirc -s 4 -i "${datapath}/${file[fk]}S.root" -u "${datapath}/lut_${file[fk]}S_cs_avr.root" -o "${datapath}/reco_${file[fk]}S.root" ${args[fk]} -f 0 -e 2000 -tr 0.5 -v 1   > "${datapath}/${file[fk]}RR.log" &
	    fi
	    
	    waitForMe $threads
	done
}

processOneReco (){
    if [ -d "${datadir}$1" ]; then
	OIFS="$IFS"
	IFS=$'\n'
	
	file=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,0)" 2>/dev/null))
	if [ ${level} -eq "9" ]; then
	    reco=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,6)" 2>/dev/null))  
	else 
	    reco=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"($1,7)" | sed "s/S.root/SP.root/" 2>/dev/null))  
	fi
	
	IFS="$OIFS"
	
	statusline="run study $1"
	cd ~/dirc/prttools > /dev/null 
	for ((fk=1;fk<${#file[@]};fk++)); do
	    root -l -q -b loadprtlibs.C procData.C+"(${reco[fk]})" > log 2> log &
	    waitForMe $threads
	done
	cd - > /dev/null 
    fi
}  

start_time=$(date +%s)
if [ ${level} -lt "9" ]; then
    cd ~/dirc/prtdirc/build > /dev/null 
    if (( $study == 0 )); then
	OIFS="$IFS"
	IFS=$'\n'
	allstudies=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"(150,11)" 2>/dev/null))
	IFS="$OIFS"
	for ((k=1;k<${#allstudies[@]};k++)); do
	    processOneSim ${allstudies[k]}
	done
    else
	processOneSim $study 
    fi
    waitForMe "1"
    if [ ${level} -eq "6" ]; then
	if (( $study == 0 )); then
	    for ((k=1;k<${#allstudies[@]};k++)); do
		datapath="${datadir}${allstudies[k]}"
		hadd -f ${datapath}/rec_${allstudies[k]}S.root ${datapath}/*S.root_R.root 
	    done
	else
	    datapath="${datadir}${study}"
	    hadd -f ${datapath}/rec_${study}S.root ${datapath}/reco_*S.root 
	fi
    fi
    if [ ${level} -eq "7" ]; then
	if (( $study == 0 )); then
	    for ((k=1;k<${#allstudies[@]};k++)); do
		datapath="${datadir}${allstudies[k]}"
		hadd -f ${datapath}/rec_${allstudies[k]}C.root ${datapath}/*C.root_R.root 
	    done
	else
	    datapath="${datadir}${study}"
	    hadd -f ${datapath}/rec_${study}C.root ${datapath}/*C.root_R.root 
	fi
    fi
    
    cd ~/dirc/prttools > /dev/null 
    printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]     \n"
else
    cd ~/dirc/prttools > /dev/null 
    root -l -q -b $HOME/dirc/prttools/datainfo.C+  > log 2>log 
    root -l -q -b loadprtlibs.C procData.C+  > log 2>log
    cd - > /dev/null 
    if (( $study == 0 )); then
	OIFS="$IFS"
	IFS=$'\n'
	allstudies=($(root -l -q -b $HOME/dirc/prttools/datainfo.C+"(150,11)" 2>/dev/null))
	IFS="$OIFS"
	for ((k=1;k<${#allstudies[@]};k++)); do
	    processOneReco ${allstudies[k]}
	done
	waitForMe "1" && sleep 2
	for ((k=1;k<${#allstudies[@]};k++)); do
	    cd "${datadir}${allstudies[k]}"
	    hadd -f res_${allstudies[k]}.root *.root.res.root
	    rm -f *.root.res.root
	    cd -
	done
    else
	processOneReco $study

	waitForMe "1" && sleep 2
	cd "${datadir}$study"
	hadd -f res_${study}.root *.root.res.root
	rm -f *.root.res.root
	cd -
    fi

    printf "\r$statusline [-] done [$(($(date +%s) - start_time)) s]     \n"
fi
