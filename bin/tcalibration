#!/bin/bash

# . rootlogin 534-12

show_help(){
  help="  NAME
    tcalibration - calibration tool of the .hld data 

  SYNOPSIS
    tcalibration [OPTION]... [FILE]

  DESCRIPTION 
     -r
        reference channel id
     -l
        use latest *hld.root file in current folder
     -c 
        path to the file with calibration curves
     -t 
        path to the file with time offsets from pilas
     -o 
        output folder (input file's folder by default)
     -j
        number of threads 
     -e 
        number of events for processing (0 - all events)
     -y 
        prototype geometry (e.g. 2017, 2018, 2019)
     -m
        mode: 0 - do not subtract tdc ref channel, 1 - do subtraction  (default), 5 - final, 6 - offsets"

    echo "$help" 
}

OPTIND=1 
while getopts "h?r:lm:c:t:o:j:e:y:" opt; do
    case "$opt" in
	h|\?)
            show_help
            exit 0
            ;;
	r)  refChannel=$OPTARG
	    ;;
	l)  latestFile=1
	    ;;
	m)  mode=$OPTARG
	    ;;
	c)  cFile=$OPTARG
	    ;;
	t)  tFile=$OPTARG
	    ;;
	o)  outDir=$OPTARG
	    ;;
	j)  threads=$OPTARG
            ;;
	e)  events=$OPTARG
	    ;;
	y)  setupid=$OPTARG
	    ;;
    esac
done
refChannel=${refChannel:-0}
mode=${mode:-1}
threads=${threads:-0}
tFile=${tFile:-""}
outDir=${outDir:-""}
events=${events:-0}
setupid=${setupid:-2019}

shift $((OPTIND-1))

fileName=$1
if [ $latestFile ]; then
    fileName=$(ls -t *M.root | head -1);
fi

if [ ! -f $fileName ] && [[ $fileName != *"*"* ]]; then
    echo "File $fileName not found. Exit"
    exit 0
fi

if [ ! -f $cFile ] && [[ $cFile != *"*"* ]]; then
    echo "File $cFile not found. Exit"
    exit 0
fi

if [[ $cFile  != "" ]]; then
   cFile=$(readlink -f $cFile) 
fi
   
if [[ $tFile  != "" ]] && [ ! -f $tFile ] && [[ $tFile != *"*"* ]]; then
    echo "File $tFile not found. Exit"
    exit 0
fi

if [[ $tFile  != "" ]]; then
    tFile=$(readlink -f $tFile) 
fi


suf="C"
#if [[ $tFile  == "" ]]; then
#    suf="C0"
#fi

if [ ! $fileName ]; then
    show_help
    exit 0
fi

inFile=$(readlink -f $fileName)
inName=$(basename $inFile)
fileId="${inName%.*.*}"

if [[ $outDir != "" ]]; then
    if [ ! -d "$outDir" ]; then
	mkdir -p "$outDir"
    fi 
    outDir=${outDir}/  
else
    outDir=$(dirname $inFile)/
fi

waitForMe (){
    spin='-\|/'
    i=0    
    while : 
    do
	activth=$(ps aux | grep "[r]oot" | grep "tcalibration.C" | wc -l)
	diffth=$(($maxnthr-$activth))

	i=$(( (i+1) %4 ))
	printf "\r$statusline ${spin:$i:1}"
	sleep .1
	
      	#echo "We have $activth active RunMonitorM jobs " 
	if [ "$activth" -lt 1 ]; then 
	    break  
	fi
    done
} 

if [ -z $1 ] && [ ! $latestFile  ]
then
    show_help
else
    if [ -d $HOME/dirc/prttools ]; then
	cd $HOME/dirc/prttools
    fi
    
    if [ "$threads" -gt 0 ]; then
	str=$(root -l -q -b loadlib.C nentries.C"(\"$inFile\")")
	echo $str
	str=$(echo $str |tr -d '\040\n\r')
	total=$(echo $str | sed -r 's/.*[^0-9]([0-9]+)$/\1/')
	if (( $events < $total && $events > 0 )); then
	    total=$events
	fi
	step=$(echo "$total/$threads" |bc)
	echo "######  $total triggers in $fileName  #######"

	statusline="Calibrating hld.root data .."
	printf "\r$statusline .."
	start_time=$(date +%s)
	
	root -l -q loadlib.C tcalibration.C++'("","","","", 0,0,0,0,1)'  > /dev/null 2>/dev/null
	
	for ((i=0;i<$threads;i++)); do
	    startEvent=$(echo "$step*$i" |bc)
	    endEvent=$(echo "$step*($i+1)-1" |bc)
	    if (( $i == $threads-1 )); then 
		endEvent=$total 
	    fi
	    root -l -q loadlib.C tcalibration.C+"(\"$inFile\",\"$outDir${fileId}${suf}${i}j.root\",\"$cFile\", \"$tFile\", $refChannel,$startEvent,$endEvent,$mode,0,$setupid)" > /dev/null  2>/dev/null &
	done
	
	waitForMe
	statusline="$statusline merging .."
	printf "\r$statusline"
	rm -f "${outDir}${fileId}${suf}".root
	list="${outDir}${fileId}${suf}"*j.root
	hadd  "${outDir}${fileId}${suf}.root" $list >/dev/null 2>/dev/null
	rm $list
	finish_time=$(date +%s)
	printf "\r$statusline done [$((finish_time - start_time)) s]\n"
    else
	root -l -q loadlib.C tcalibration.C+"(\"$inFile\",\"${outDir}${fileId}${suf}.root\",\"$cFile\", \"$tFile\", $refChannel,0,$events,$mode,0,$setupid)"
    fi
    cd -> /dev/null
fi
